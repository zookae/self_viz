<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='win' version='8.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8200.14.0616.0146                                -->
  <preferences>
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='8.3'>
      <aliases enabled='yes' />
      <column caption='goal weight' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='118.0'>
        <calculation class='tableau' formula='118.0' />
      </column>
      <column caption='target carbs' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='50'>
        <calculation class='tableau' formula='50' />
      </column>
    </datasource>
    <datasource caption='food' inline='true' name='textscan.41840.489508009261' version='8.3'>
      <connection class='textscan' directory='C:/Users/zook/prog_proj/self_viz/data' filename='2014_clean.csv'>
        <relation name='2014_clean#csv' table='[2014_clean#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='integer' name='Calories' ordinal='1' />
            <column datatype='integer' name='Carbs' ordinal='2' />
            <column datatype='integer' name='Fat' ordinal='3' />
            <column datatype='integer' name='Protein' ordinal='4' />
            <column datatype='integer' name='Cholest' ordinal='5' />
            <column datatype='integer' name='Sodium' ordinal='6' />
            <column datatype='integer' name='Sugars' ordinal='7' />
            <column datatype='integer' name='Fiber' ordinal='8' />
          </columns>
        </relation>
        <refresh incremental-updates=''>
        </refresh>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[2014_clean#csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Calories</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Calories]</local-name>
            <parent-name>[2014_clean#csv]</parent-name>
            <remote-alias>Calories</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Carbs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Carbs]</local-name>
            <parent-name>[2014_clean#csv]</parent-name>
            <remote-alias>Carbs</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fat</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Fat]</local-name>
            <parent-name>[2014_clean#csv]</parent-name>
            <remote-alias>Fat</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Protein</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Protein]</local-name>
            <parent-name>[2014_clean#csv]</parent-name>
            <remote-alias>Protein</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cholest</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cholest]</local-name>
            <parent-name>[2014_clean#csv]</parent-name>
            <remote-alias>Cholest</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sodium</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Sodium]</local-name>
            <parent-name>[2014_clean#csv]</parent-name>
            <remote-alias>Sodium</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sugars</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Sugars]</local-name>
            <parent-name>[2014_clean#csv]</parent-name>
            <remote-alias>Sugars</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fiber</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Fiber]</local-name>
            <parent-name>[2014_clean#csv]</parent-name>
            <remote-alias>Fiber</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[2014_clean#csv]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='% bad days' datatype='real' default-format='p0%' name='[Calculation_1920720144405091]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Calculation_4320720143905551]) / count([Calculation_4320720143905551])' scope-isolation='false' />
      </column>
      <column caption='calories - carbs' datatype='integer' name='[Calculation_3630720114612404]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Carbs]-[Fiber]) * 4' scope-isolation='false' />
      </column>
      <column caption='% protein' datatype='real' default-format='p0%' name='[Calculation_4170720114807049]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[calories - carbs (copy)]  / [Calories]' scope-isolation='false' />
      </column>
      <column caption='carbs off target' datatype='integer' name='[Calculation_4320720143905551]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [Carbs] &gt; [Parameters].[Parameter 2] then 1&#13;&#10;else 0&#13;&#10;end' scope-isolation='false' />
      </column>
      <column caption='% fat' datatype='real' default-format='p0%' name='[Calculation_4890720114759249]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[calories - carbs (copy) (copy)]  / [Calories]' scope-isolation='false' />
      </column>
      <column caption='% carbs' datatype='real' default-format='p0%' name='[Calculation_4990720114744646]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_3630720114612404] / [Calories]' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='calories - fat' datatype='integer' name='[calories - carbs (copy) (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Fat] * 9' scope-isolation='false' />
      </column>
      <column caption='calories - protein' datatype='integer' name='[calories - carbs (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Protein] * 4' scope-isolation='false' />
      </column>
      <column-instance column='[Calculation_4170720114807049]' derivation='Median' name='[med:Calculation_4170720114807049:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_4890720114759249]' derivation='Median' name='[med:Calculation_4890720114759249:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_4990720114744646]' derivation='Median' name='[med:Calculation_4990720114744646:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_3630720114612404]' derivation='Sum' name='[sum:Calculation_3630720114612404:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_4170720114807049]' derivation='Sum' name='[sum:Calculation_4170720114807049:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_4890720114759249]' derivation='Sum' name='[sum:Calculation_4890720114759249:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_4990720114744646]' derivation='Sum' name='[sum:Calculation_4990720114744646:qk]' pivot='key' type='quantitative' />
      <column-instance column='[calories - carbs (copy) (copy)]' derivation='Sum' name='[sum:calories - carbs (copy) (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[calories - carbs (copy)]' derivation='Sum' name='[sum:calories - carbs (copy):qk]' pivot='key' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\zook\prog_proj\self_viz\data\2014_clean.tde' schema='Extract' tablename='Extract' update-time='07/20/2014 07:20:17 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh append-to-last-path='C:\Users\zook\prog_proj\self_viz\data\2011_clean.csv'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='200' timestamp-start='2014-07-20 18:45:26.770' />
            <refresh-event add-from-file-path='2013_clean.csv' increment-value='' refresh-type='add from file' rows-inserted='364' timestamp-start='2014-07-20 19:02:25.854' />
            <refresh-event add-from-file-path='2012_clean.csv' increment-value='' refresh-type='add from file' rows-inserted='366' timestamp-start='2014-07-20 19:16:05.759' />
            <refresh-event add-from-file-path='2011_clean.csv' increment-value='' refresh-type='add from file' rows-inserted='329' timestamp-start='2014-07-20 19:20:02.407' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Calories</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Calories]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calories</remote-alias>
              <ordinal>0</ordinal>
              <family>2014_clean#csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>827</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>117</statistic>
                <statistic aggregation='Max' datatype='integer'>4358</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Carbs</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Carbs]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Carbs</remote-alias>
              <ordinal>1</ordinal>
              <family>2014_clean#csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>318</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>2</statistic>
                <statistic aggregation='Max' datatype='integer'>392</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Cholest</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Cholest]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Cholest</remote-alias>
              <ordinal>2</ordinal>
              <family>2014_clean#csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>422</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>2344</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Date</remote-alias>
              <ordinal>3</ordinal>
              <family>2014_clean#csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1259</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#2011-01-15#</statistic>
                <statistic aggregation='Max' datatype='date'>#2014-07-19#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Fat</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Fat]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Fat</remote-alias>
              <ordinal>4</ordinal>
              <family>2014_clean#csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>112</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>5</statistic>
                <statistic aggregation='Max' datatype='integer'>296</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Fiber</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Fiber]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Fiber</remote-alias>
              <ordinal>5</ordinal>
              <family>2014_clean#csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>117</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>151</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>6</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Protein</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Protein]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Protein</remote-alias>
              <ordinal>7</ordinal>
              <family>2014_clean#csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>215</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>9</statistic>
                <statistic aggregation='Max' datatype='integer'>340</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sodium</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Sodium]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Sodium</remote-alias>
              <ordinal>8</ordinal>
              <family>2014_clean#csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>910</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>113</statistic>
                <statistic aggregation='Max' datatype='integer'>8576</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sugars</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Sugars]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Sugars</remote-alias>
              <ordinal>9</ordinal>
              <family>2014_clean#csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>107</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>175</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;[textscan.41840.489508009261].[sum:Calculation_3630720114612404:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[textscan.41840.489508009261].[sum:calories - carbs (copy):qk]&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;[textscan.41840.489508009261].[sum:Calculation_4890720114759249:qk]&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;[textscan.41840.489508009261].[med:Calculation_4170720114807049:qk]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[textscan.41840.489508009261].[med:Calculation_4890720114759249:qk]&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;[textscan.41840.489508009261].[sum:Calculation_4170720114807049:qk]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[textscan.41840.489508009261].[med:Calculation_4990720114744646:qk]&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;[textscan.41840.489508009261].[sum:Calculation_4990720114744646:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[textscan.41840.489508009261].[sum:calories - carbs (copy) (copy):qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' center='0.80000000000000004' field='[Calculation_1920720144405091]' max='1.0' min='0.0' num-steps='7' palette='tableau-red-green' symmetric='false' type='interpolated' />
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='target carbs' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='50'>
          <calculation class='tableau' formula='50' />
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='mfp_weight' inline='true' name='textscan.41840.595065694448' version='8.3'>
      <connection class='textscan' directory='C:/Users/zook/prog_proj/self_viz/data' filename='mfp_weight.csv'>
        <relation name='mfp_weight#csv' table='[mfp_weight#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='real' name='Weight' ordinal='1' />
          </columns>
        </relation>
        <refresh incremental-updates=''>
        </refresh>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[mfp_weight#csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Weight</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Weight]</local-name>
            <parent-name>[mfp_weight#csv]</parent-name>
            <remote-alias>Weight</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[mfp_weight#csv]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='diff from average' datatype='real' default-format='N' name='[Calculation_2280720143647028]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Weight] - [Parameters].[Parameter 1]' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='real' name='[Weight]' role='measure' type='quantitative'>
      </column>
      <column-instance column='[Weight]' derivation='Avg' name='[avg:Weight:qk]' pivot='key' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\zook\prog_proj\self_viz\data\mfp_weight.tde' schema='Extract' tablename='Extract' update-time='07/20/2014 09:17:12 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='1283' timestamp-start='2014-07-20 21:17:12.113' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Date</remote-alias>
              <ordinal>0</ordinal>
              <family>mfp_weight#csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1283</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#2011-01-15#</statistic>
                <statistic aggregation='Max' datatype='date'>#2014-07-20#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>1</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Weight</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Weight]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Weight</remote-alias>
              <ordinal>2</ordinal>
              <family>mfp_weight#csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>75</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>102.40000000000001</statistic>
                <statistic aggregation='Max' datatype='real'>125.5</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.4788' measure-ordering='alphabetic' measure-percentage='0.123061' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#595959'>
              <bucket>&quot;[Parameters].[Parameter 1]&quot;</bucket>
            </map>
            <map to='#a2c8ec'>
              <bucket>&quot;[textscan.41840.595065694448].[avg:Weight:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='goal weight' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='118.0'>
          <calculation class='tableau' formula='118.0' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 7'>
      <table>
        <view>
          <datasources>
            <datasource caption='mfp_weight' name='textscan.41840.595065694448' />
          </datasources>
          <datasource-dependencies datasource='textscan.41840.595065694448'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='real' name='[Weight]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Weight]' derivation='Sum' name='[sum:Weight:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='relative-date' column='[textscan.41840.595065694448].[none:Date:qk]' first-period='-6' include-future='true' include-null='false' last-period='0' period-type='day' />
          <slices>
            <column>[textscan.41840.595065694448].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[textscan.41840.595065694448].[sum:Weight:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.41840.595065694448].[sum:Weight:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' domain-expand='false' field='[textscan.41840.595065694448].[sum:Weight:qk]' field-type='quantitative' max='127.80486486486488' min='110.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[textscan.41840.595065694448].[sum:Weight:qk]</rows>
        <cols>[textscan.41840.595065694448].[none:Date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 8'>
      <table>
        <view>
          <datasources>
            <datasource caption='food' name='textscan.41840.489508009261' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='textscan.41840.489508009261'>
            <column caption='calories - carbs' datatype='integer' name='[Calculation_3630720114612404]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Carbs]-[Fiber]) * 4' scope-isolation='false' />
            </column>
            <column caption='carbs off target' datatype='integer' name='[Calculation_4320720143905551]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Carbs] &gt; [Parameters].[Parameter 2] then 1&#13;&#10;else 0&#13;&#10;end' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[Calculation_4320720143905551]' derivation='None' name='[none:Calculation_4320720143905551:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3630720114612404]' derivation='Sum' name='[sum:Calculation_3630720114612404:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='relative-date' column='[textscan.41840.489508009261].[none:Date:qk]' first-period='-6' include-future='true' include-null='false' last-period='0' period-type='day' />
          <slices>
            <column>[textscan.41840.489508009261].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[textscan.41840.489508009261].[none:Calculation_4320720143905551:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[textscan.41840.489508009261].[sum:Calculation_3630720114612404:qk]</rows>
        <cols>[textscan.41840.489508009261].[tdy:Date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 9'>
      <table>
        <view>
          <datasources>
            <datasource caption='food' name='textscan.41840.489508009261' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='textscan.41840.489508009261'>
            <column caption='% bad days' datatype='real' default-format='p0%' name='[Calculation_1920720144405091]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Calculation_4320720143905551]) / count([Calculation_4320720143905551])' scope-isolation='false' />
            </column>
            <column caption='carbs off target' datatype='integer' name='[Calculation_4320720143905551]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Carbs] &gt; [Parameters].[Parameter 2] then 1&#13;&#10;else 0&#13;&#10;end' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4320720143905551]' derivation='Sum' name='[sum:Calculation_4320720143905551:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1920720144405091]' derivation='User' name='[usr:Calculation_1920720144405091:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='relative-date' column='[textscan.41840.489508009261].[none:Date:qk]' first-period='-6' include-future='true' include-null='false' last-period='0' period-type='day' />
          <slices>
            <column>[textscan.41840.489508009261].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.41840.489508009261].[usr:Calculation_1920720144405091:qk]' />
              <text column='[textscan.41840.489508009261].[usr:Calculation_1920720144405091:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.41840.489508009261].[sum:Calculation_4320720143905551:qk]</rows>
        <cols></cols>
      </table>
    </worksheet>
    <worksheet name='calorie intake'>
      <table>
        <view>
          <datasources>
            <datasource caption='food' name='textscan.41840.489508009261' />
          </datasources>
          <datasource-dependencies datasource='textscan.41840.489508009261'>
            <column caption='% protein' datatype='real' default-format='p0%' name='[Calculation_4170720114807049]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[calories - carbs (copy)]  / [Calories]' scope-isolation='false' />
            </column>
            <column caption='% fat' datatype='real' default-format='p0%' name='[Calculation_4890720114759249]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[calories - carbs (copy) (copy)]  / [Calories]' scope-isolation='false' />
            </column>
            <column caption='% carbs' datatype='real' default-format='p0%' name='[Calculation_4990720114744646]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_3630720114612404] / [Calories]' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Calories]' role='measure' type='quantitative'>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4170720114807049]' derivation='Sum' name='[sum:Calculation_4170720114807049:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4890720114759249]' derivation='Sum' name='[sum:Calculation_4890720114759249:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4990720114744646]' derivation='Sum' name='[sum:Calculation_4990720114744646:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calories]' derivation='Sum' name='[sum:Calories:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.41840.489508009261].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41840.489508009261].[sum:Calculation_4990720114744646:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41840.489508009261].[sum:Calculation_4890720114759249:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41840.489508009261].[sum:Calculation_4170720114807049:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[textscan.41840.489508009261].[none:Date:qk]' included-values='in-range'>
            <min>#2011-01-15#</min>
            <max>#2014-07-19#</max>
          </filter>
          <slices>
            <column>[textscan.41840.489508009261].[:Measure Names]</column>
            <column>[textscan.41840.489508009261].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-pattern' id='refline0' value='dotted' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[textscan.41840.489508009261].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[textscan.41840.489508009261].[tdy:Date:qk]' formula='constant' id='refline0' label='Blizzard' label-type='custom' scope='per-pane' value='#2014-05-22 00:00:00#' value-column='[textscan.41840.489508009261].[tdy:Date:qk]' z-order='1' />
            <reference-line axis-column='[textscan.41840.489508009261].[tdy:Date:qk]' formula='constant' id='refline1' label='FDG 2014' label-type='custom' paired-id='refline2' scope='per-pane' symmetric='false' value='#2014-04-02 00:00:00#' value-column='[textscan.41840.489508009261].[tdy:Date:qk]' z-order='2' />
            <reference-line axis-column='[textscan.41840.489508009261].[tdy:Date:qk]' formula='constant' id='refline10' label-type='none' paired-id='refline9' scope='per-pane' symmetric='false' value='#2013-05-03 00:00:00#' value-column='[textscan.41840.489508009261].[tdy:Date:qk]' z-order='6' />
            <reference-line axis-column='[textscan.41840.489508009261].[tdy:Date:qk]' formula='constant' id='refline11' label='CIG 2013' label-type='custom' paired-id='refline12' scope='per-pane' symmetric='false' value='#2013-08-10 00:00:00#' value-column='[textscan.41840.489508009261].[tdy:Date:qk]' z-order='7' />
            <reference-line axis-column='[textscan.41840.489508009261].[tdy:Date:qk]' formula='constant' id='refline12' label-type='none' paired-id='refline11' scope='per-pane' symmetric='false' value='#2013-08-14 00:00:00#' value-column='[textscan.41840.489508009261].[tdy:Date:qk]' z-order='7' />
            <reference-line axis-column='[textscan.41840.489508009261].[tdy:Date:qk]' formula='constant' id='refline13' label='GDC 2013' label-type='custom' paired-id='refline14' scope='per-pane' symmetric='false' value='#2013-03-24 00:00:00#' value-column='[textscan.41840.489508009261].[tdy:Date:qk]' z-order='8' />
            <reference-line axis-column='[textscan.41840.489508009261].[tdy:Date:qk]' formula='constant' id='refline14' label-type='none' paired-id='refline13' scope='per-pane' symmetric='false' value='#2013-03-30 00:00:00#' value-column='[textscan.41840.489508009261].[tdy:Date:qk]' z-order='8' />
            <reference-line axis-column='[textscan.41840.489508009261].[tdy:Date:qk]' formula='constant' id='refline15' label='FDG 2012' label-type='custom' paired-id='refline16' scope='per-pane' symmetric='false' value='#2012-05-28 00:00:00#' value-column='[textscan.41840.489508009261].[tdy:Date:qk]' z-order='9' />
            <reference-line axis-column='[textscan.41840.489508009261].[tdy:Date:qk]' formula='constant' id='refline16' label-type='none' paired-id='refline15' scope='per-pane' symmetric='false' value='#2012-06-02 00:00:00#' value-column='[textscan.41840.489508009261].[tdy:Date:qk]' z-order='9' />
            <reference-line axis-column='[textscan.41840.489508009261].[tdy:Date:qk]' formula='constant' id='refline17' label='AIIDE 2012' label-type='custom' paired-id='refline18' scope='per-pane' symmetric='false' value='#2012-10-07 00:00:00#' value-column='[textscan.41840.489508009261].[tdy:Date:qk]' z-order='10' />
            <reference-line axis-column='[textscan.41840.489508009261].[tdy:Date:qk]' formula='constant' id='refline18' label-type='none' paired-id='refline17' scope='per-pane' symmetric='false' value='#2012-10-13 00:00:00#' value-column='[textscan.41840.489508009261].[tdy:Date:qk]' z-order='10' />
            <reference-line axis-column='[textscan.41840.489508009261].[tdy:Date:qk]' formula='constant' id='refline2' label-type='none' paired-id='refline1' scope='per-pane' symmetric='false' value='#2014-04-07 00:00:00#' value-column='[textscan.41840.489508009261].[tdy:Date:qk]' z-order='2' />
            <reference-line axis-column='[textscan.41840.489508009261].[tdy:Date:qk]' formula='constant' id='refline3' label='Occam&apos;s protocol' label-type='custom' paired-id='refline4' scope='per-pane' symmetric='false' value='#2013-01-25 00:00:00#' value-column='[textscan.41840.489508009261].[tdy:Date:qk]' z-order='3' />
            <reference-line axis-column='[textscan.41840.489508009261].[tdy:Date:qk]' formula='constant' id='refline4' label-type='none' paired-id='refline3' scope='per-pane' symmetric='false' value='#2013-02-27 00:00:00#' value-column='[textscan.41840.489508009261].[tdy:Date:qk]' z-order='3' />
            <reference-line axis-column='[textscan.41840.489508009261].[tdy:Date:qk]' formula='constant' id='refline5' label='FDG 2013' label-type='custom' paired-id='refline6' scope='per-pane' symmetric='false' value='#2013-05-12 00:00:00#' value-column='[textscan.41840.489508009261].[tdy:Date:qk]' z-order='4' />
            <reference-line axis-column='[textscan.41840.489508009261].[tdy:Date:qk]' formula='constant' id='refline6' label-type='none' paired-id='refline5' scope='per-pane' symmetric='false' value='#2013-05-19 00:00:00#' value-column='[textscan.41840.489508009261].[tdy:Date:qk]' z-order='4' />
            <reference-line axis-column='[textscan.41840.489508009261].[tdy:Date:qk]' formula='constant' id='refline7' label='AIIDE 2013' label-type='custom' paired-id='refline8' scope='per-pane' symmetric='false' value='#2013-10-13 00:00:00#' value-column='[textscan.41840.489508009261].[tdy:Date:qk]' z-order='5' />
            <reference-line axis-column='[textscan.41840.489508009261].[tdy:Date:qk]' formula='constant' id='refline8' label-type='none' paired-id='refline7' scope='per-pane' symmetric='false' value='#2013-10-18 00:00:00#' value-column='[textscan.41840.489508009261].[tdy:Date:qk]' z-order='5' />
            <reference-line axis-column='[textscan.41840.489508009261].[tdy:Date:qk]' formula='constant' id='refline9' label='CHI 2013' label-type='custom' paired-id='refline10' scope='per-pane' symmetric='false' value='#2013-04-26 00:00:00#' value-column='[textscan.41840.489508009261].[tdy:Date:qk]' z-order='6' />
          </pane>
          <pane id='1' y-axis-name='[textscan.41840.489508009261].[sum:Calories:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[textscan.41840.489508009261].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='3' y-axis-name='[textscan.41840.489508009261].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[textscan.41840.489508009261].[:Measure Names]' />
              <text column='[textscan.41840.489508009261].[:Measure Names]' />
              <lod column='[textscan.41840.489508009261].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([textscan.41840.489508009261].[sum:Calories:qk] + [textscan.41840.489508009261].[Multiple Values])</rows>
        <cols>[textscan.41840.489508009261].[tdy:Date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='calories by week day'>
      <table>
        <view>
          <datasources>
            <datasource caption='food' name='textscan.41840.489508009261' />
          </datasources>
          <datasource-dependencies datasource='textscan.41840.489508009261'>
            <column caption='% protein' datatype='real' default-format='p0%' name='[Calculation_4170720114807049]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[calories - carbs (copy)]  / [Calories]' scope-isolation='false' />
            </column>
            <column caption='% fat' datatype='real' default-format='p0%' name='[Calculation_4890720114759249]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[calories - carbs (copy) (copy)]  / [Calories]' scope-isolation='false' />
            </column>
            <column caption='% carbs' datatype='real' default-format='p0%' name='[Calculation_4990720114744646]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_3630720114612404] / [Calories]' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Calories]' role='measure' type='quantitative'>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[Calories]' derivation='Avg' name='[avg:Calories:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4170720114807049]' derivation='Median' name='[med:Calculation_4170720114807049:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4890720114759249]' derivation='Median' name='[med:Calculation_4890720114759249:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4990720114744646]' derivation='Median' name='[med:Calculation_4990720114744646:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4170720114807049]' derivation='Sum' name='[sum:Calculation_4170720114807049:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Weekday' name='[wd:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.41840.489508009261].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41840.489508009261].[med:Calculation_4990720114744646:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41840.489508009261].[med:Calculation_4890720114759249:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41840.489508009261].[med:Calculation_4170720114807049:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.41840.489508009261].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[textscan.41840.489508009261].[med:Calculation_4990720114744646:qk]&quot;</bucket>
              <bucket>&quot;[textscan.41840.489508009261].[med:Calculation_4890720114759249:qk]&quot;</bucket>
              <bucket>&quot;[textscan.41840.489508009261].[sum:Calculation_4170720114807049:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='relative-date' column='[textscan.41840.489508009261].[none:Date:qk]' first-period='-59' include-future='true' include-null='false' last-period='0' period-type='day' />
          <slices>
            <column>[textscan.41840.489508009261].[:Measure Names]</column>
            <column>[textscan.41840.489508009261].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-format' field='[textscan.41840.489508009261].[Multiple Values]' value='p0%' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-pattern' id='refline0' value='dotted' />
          </style-rule>
          <style-rule element='refboxplot'>
            <format attr='opacity' id='refline19' value='219' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[textscan.41840.489508009261].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' y-axis-name='[textscan.41840.489508009261].[avg:Calories:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[textscan.41840.489508009261].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.49375692009925842' />
                <format attr='mark-color' value='#437564' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' y-axis-name='[textscan.41840.489508009261].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[textscan.41840.489508009261].[:Measure Names]' />
              <lod column='[textscan.41840.489508009261].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([textscan.41840.489508009261].[avg:Calories:qk] + [textscan.41840.489508009261].[Multiple Values])</rows>
        <cols>[textscan.41840.489508009261].[wd:Date:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='calories vs weight'>
      <table>
        <view>
          <datasources>
            <datasource caption='food' name='textscan.41840.489508009261' />
            <datasource caption='mfp_weight' name='textscan.41840.595065694448' />
          </datasources>
          <datasource-dependencies datasource='textscan.41840.489508009261'>
            <column caption='% protein' datatype='real' default-format='p0%' name='[Calculation_4170720114807049]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[calories - carbs (copy)]  / [Calories]' scope-isolation='false' />
            </column>
            <column caption='% fat' datatype='real' default-format='p0%' name='[Calculation_4890720114759249]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[calories - carbs (copy) (copy)]  / [Calories]' scope-isolation='false' />
            </column>
            <column caption='% carbs' datatype='real' default-format='p0%' name='[Calculation_4990720114744646]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_3630720114612404] / [Calories]' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Calories]' role='measure' type='quantitative'>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4170720114807049]' derivation='Sum' name='[sum:Calculation_4170720114807049:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4890720114759249]' derivation='Sum' name='[sum:Calculation_4890720114759249:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4990720114744646]' derivation='Sum' name='[sum:Calculation_4990720114744646:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calories]' derivation='Sum' name='[sum:Calories:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='textscan.41840.595065694448'>
            <column datatype='real' name='[Weight]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Weight]' derivation='Sum' name='[sum:Weight:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.41840.489508009261].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41840.489508009261].[sum:Calculation_4990720114744646:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41840.489508009261].[sum:Calculation_4890720114759249:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.41840.489508009261].[sum:Calculation_4170720114807049:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[textscan.41840.489508009261].[none:Date:qk]' included-values='in-range'>
            <min>#2011-01-15#</min>
            <max>#2014-07-19#</max>
          </filter>
          <slices>
            <column>[textscan.41840.489508009261].[:Measure Names]</column>
            <column>[textscan.41840.489508009261].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[textscan.41840.595065694448].[sum:Weight:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[textscan.41840.489508009261].[sum:Calories:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.41840.489508009261].[sum:Calories:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[textscan.41840.489508009261].[sum:Calories:qk]' field-type='quantitative' max='3500' min='0' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[textscan.41840.489508009261].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.41840.489508009261].[Multiple Values]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[textscan.41840.489508009261].[Multiple Values]' field-type='quantitative' max='1.0' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[textscan.41840.489508009261].[Multiple Values]' value='p0%' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-pattern' id='refline0' value='dotted' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[textscan.41840.489508009261].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[textscan.41840.489508009261].[tdy:Date:qk]' formula='constant' id='refline0' label='Blizzard' label-type='custom' scope='per-pane' value='#2014-05-22 00:00:00#' value-column='[textscan.41840.489508009261].[tdy:Date:qk]' z-order='1' />
            <reference-line axis-column='[textscan.41840.489508009261].[tdy:Date:qk]' formula='constant' id='refline1' label='FDG 2014' label-type='custom' paired-id='refline2' scope='per-pane' symmetric='false' value='#2014-04-02 00:00:00#' value-column='[textscan.41840.489508009261].[tdy:Date:qk]' z-order='2' />
            <reference-line axis-column='[textscan.41840.489508009261].[tdy:Date:qk]' formula='constant' id='refline10' label-type='none' paired-id='refline9' scope='per-pane' symmetric='false' value='#2013-05-03 00:00:00#' value-column='[textscan.41840.489508009261].[tdy:Date:qk]' z-order='6' />
            <reference-line axis-column='[textscan.41840.489508009261].[tdy:Date:qk]' formula='constant' id='refline11' label='CIG 2013' label-type='custom' paired-id='refline12' scope='per-pane' symmetric='false' value='#2013-08-10 00:00:00#' value-column='[textscan.41840.489508009261].[tdy:Date:qk]' z-order='7' />
            <reference-line axis-column='[textscan.41840.489508009261].[tdy:Date:qk]' formula='constant' id='refline12' label-type='none' paired-id='refline11' scope='per-pane' symmetric='false' value='#2013-08-14 00:00:00#' value-column='[textscan.41840.489508009261].[tdy:Date:qk]' z-order='7' />
            <reference-line axis-column='[textscan.41840.489508009261].[tdy:Date:qk]' formula='constant' id='refline13' label='GDC 2013' label-type='custom' paired-id='refline14' scope='per-pane' symmetric='false' value='#2013-03-24 00:00:00#' value-column='[textscan.41840.489508009261].[tdy:Date:qk]' z-order='8' />
            <reference-line axis-column='[textscan.41840.489508009261].[tdy:Date:qk]' formula='constant' id='refline14' label-type='none' paired-id='refline13' scope='per-pane' symmetric='false' value='#2013-03-30 00:00:00#' value-column='[textscan.41840.489508009261].[tdy:Date:qk]' z-order='8' />
            <reference-line axis-column='[textscan.41840.489508009261].[tdy:Date:qk]' formula='constant' id='refline15' label='FDG 2012' label-type='custom' paired-id='refline16' scope='per-pane' symmetric='false' value='#2012-05-28 00:00:00#' value-column='[textscan.41840.489508009261].[tdy:Date:qk]' z-order='9' />
            <reference-line axis-column='[textscan.41840.489508009261].[tdy:Date:qk]' formula='constant' id='refline16' label-type='none' paired-id='refline15' scope='per-pane' symmetric='false' value='#2012-06-02 00:00:00#' value-column='[textscan.41840.489508009261].[tdy:Date:qk]' z-order='9' />
            <reference-line axis-column='[textscan.41840.489508009261].[tdy:Date:qk]' formula='constant' id='refline17' label='AIIDE 2012' label-type='custom' paired-id='refline18' scope='per-pane' symmetric='false' value='#2012-10-07 00:00:00#' value-column='[textscan.41840.489508009261].[tdy:Date:qk]' z-order='10' />
            <reference-line axis-column='[textscan.41840.489508009261].[tdy:Date:qk]' formula='constant' id='refline18' label-type='none' paired-id='refline17' scope='per-pane' symmetric='false' value='#2012-10-13 00:00:00#' value-column='[textscan.41840.489508009261].[tdy:Date:qk]' z-order='10' />
            <reference-line axis-column='[textscan.41840.489508009261].[tdy:Date:qk]' formula='constant' id='refline2' label-type='none' paired-id='refline1' scope='per-pane' symmetric='false' value='#2014-04-07 00:00:00#' value-column='[textscan.41840.489508009261].[tdy:Date:qk]' z-order='2' />
            <reference-line axis-column='[textscan.41840.489508009261].[tdy:Date:qk]' formula='constant' id='refline3' label='Occam&apos;s protocol' label-type='custom' paired-id='refline4' scope='per-pane' symmetric='false' value='#2013-01-25 00:00:00#' value-column='[textscan.41840.489508009261].[tdy:Date:qk]' z-order='3' />
            <reference-line axis-column='[textscan.41840.489508009261].[tdy:Date:qk]' formula='constant' id='refline4' label-type='none' paired-id='refline3' scope='per-pane' symmetric='false' value='#2013-02-27 00:00:00#' value-column='[textscan.41840.489508009261].[tdy:Date:qk]' z-order='3' />
            <reference-line axis-column='[textscan.41840.489508009261].[tdy:Date:qk]' formula='constant' id='refline5' label='FDG 2013' label-type='custom' paired-id='refline6' scope='per-pane' symmetric='false' value='#2013-05-12 00:00:00#' value-column='[textscan.41840.489508009261].[tdy:Date:qk]' z-order='4' />
            <reference-line axis-column='[textscan.41840.489508009261].[tdy:Date:qk]' formula='constant' id='refline6' label-type='none' paired-id='refline5' scope='per-pane' symmetric='false' value='#2013-05-19 00:00:00#' value-column='[textscan.41840.489508009261].[tdy:Date:qk]' z-order='4' />
            <reference-line axis-column='[textscan.41840.489508009261].[tdy:Date:qk]' formula='constant' id='refline7' label='AIIDE 2013' label-type='custom' paired-id='refline8' scope='per-pane' symmetric='false' value='#2013-10-13 00:00:00#' value-column='[textscan.41840.489508009261].[tdy:Date:qk]' z-order='5' />
            <reference-line axis-column='[textscan.41840.489508009261].[tdy:Date:qk]' formula='constant' id='refline8' label-type='none' paired-id='refline7' scope='per-pane' symmetric='false' value='#2013-10-18 00:00:00#' value-column='[textscan.41840.489508009261].[tdy:Date:qk]' z-order='5' />
            <reference-line axis-column='[textscan.41840.489508009261].[tdy:Date:qk]' formula='constant' id='refline9' label='CHI 2013' label-type='custom' paired-id='refline10' scope='per-pane' symmetric='false' value='#2013-04-26 00:00:00#' value-column='[textscan.41840.489508009261].[tdy:Date:qk]' z-order='6' />
          </pane>
          <pane id='1' y-axis-name='[textscan.41840.489508009261].[sum:Calories:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[textscan.41840.489508009261].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#437564' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' y-axis-name='[textscan.41840.489508009261].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[textscan.41840.489508009261].[:Measure Names]' />
              <text column='[textscan.41840.489508009261].[:Measure Names]' />
              <lod column='[textscan.41840.489508009261].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' y-axis-name='[textscan.41840.595065694448].[sum:Weight:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[textscan.41840.489508009261].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([textscan.41840.489508009261].[sum:Calories:qk] + ([textscan.41840.595065694448].[sum:Weight:qk] + [textscan.41840.489508009261].[Multiple Values]))</rows>
        <cols>[textscan.41840.489508009261].[tdy:Date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='goal weight'>
      <table>
        <view>
          <datasources>
            <datasource caption='mfp_weight' name='textscan.41840.595065694448' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='goal weight' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='118.0'>
              <calculation class='tableau' formula='118.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='textscan.41840.595065694448'>
            <column caption='diff from average' datatype='real' default-format='N' name='[Calculation_2280720143647028]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Weight] - [Parameters].[Parameter 1]' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='real' name='[Weight]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Calculation_2280720143647028]' derivation='Avg' name='[avg:Calculation_2280720143647028:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Weight]' derivation='Avg' name='[avg:Weight:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='relative-date' column='[textscan.41840.595065694448].[none:Date:qk]' first-period='-6' include-future='true' include-null='false' last-period='0' period-type='day' />
          <slices>
            <column>[textscan.41840.595065694448].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[textscan.41840.595065694448].[avg:Weight:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.41840.595065694448].[avg:Weight:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[textscan.41840.595065694448].[avg:Weight:qk]' field-type='quantitative' max='126.52500000000001' min='100.0' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[Parameters].[Parameter 1]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.41840.595065694448].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' y-axis-name='[textscan.41840.595065694448].[avg:Weight:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[textscan.41840.595065694448].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[Parameters].[Parameter 1]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <encodings>
              <color column='[textscan.41840.595065694448].[:Measure Names]' />
              <text column='[textscan.41840.595065694448].[avg:Calculation_2280720143647028:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.626187801361084' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([textscan.41840.595065694448].[avg:Weight:qk] + [Parameters].[Parameter 1])</rows>
        <cols></cols>
      </table>
    </worksheet>
    <worksheet name='weight by week day'>
      <table>
        <view>
          <datasources>
            <datasource caption='mfp_weight' name='textscan.41840.595065694448' />
          </datasources>
          <datasource-dependencies datasource='textscan.41840.595065694448'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='real' name='[Weight]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Weight]' derivation='None' name='[none:Weight:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Weekday' name='[wd:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='relative-date' column='[textscan.41840.595065694448].[none:Date:qk]' first-period='-59' include-future='true' include-null='false' last-period='0' period-anchor='#2014-07-20 00:00:00#' period-type='day' />
          <slices>
            <column>[textscan.41840.595065694448].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refboxplot'>
            <format attr='opacity' id='refline0' value='219' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <reference-line axis-column='[textscan.41840.595065694448].[none:Weight:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' formula='average' id='refline0' label-type='automatic' scope='per-cell' symmetric='false' value-column='[textscan.41840.595065694448].[none:Weight:qk]' z-order='1' />
          </pane>
        </panes>
        <rows>[textscan.41840.595065694448].[none:Weight:qk]</rows>
        <cols>[textscan.41840.595065694448].[wd:Date:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='weight trend'>
      <table>
        <view>
          <datasources>
            <datasource caption='mfp_weight' name='textscan.41840.595065694448' />
          </datasources>
          <datasource-dependencies datasource='textscan.41840.595065694448'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='real' name='[Weight]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Weight]' derivation='Sum' name='[sum:Weight:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[textscan.41840.595065694448].[sum:Weight:qk]</rows>
        <cols>[textscan.41840.595065694448].[tdy:Date:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='calorie intake'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='3' param='[textscan.41840.489508009261].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[textscan.41840.489508009261].[:Measure Names]</field>
          <field>[textscan.41840.489508009261].[none:Date:qk]</field>
          <field>[textscan.41840.489508009261].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='weight trend'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[textscan.41840.595065694448].[tdy:Date:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='calories vs weight'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='3' param='[textscan.41840.489508009261].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[textscan.41840.489508009261].[none:Date:qk]' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[textscan.41840.489508009261].[:Measure Names]</field>
          <field>[textscan.41840.489508009261].[none:Date:qk]</field>
          <field>[textscan.41840.489508009261].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='calories by week day'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='3' param='[textscan.41840.489508009261].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[textscan.41840.489508009261].[none:Date:qk]' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[textscan.41840.489508009261].[:Measure Names]</field>
          <field>[textscan.41840.489508009261].[none:Calories:qk]</field>
          <field>[textscan.41840.489508009261].[none:Date:qk]</field>
          <field>[textscan.41840.489508009261].[yr:Date:ok]</field>
          <field>[textscan.41840.595065694448].[none:Date:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='1' name='weight by week day'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[textscan.41840.595065694448].[none:Date:qk]' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[textscan.41840.595065694448].[none:Date:qk]</field>
          <field>[textscan.41840.595065694448].[none:Weight:qk]</field>
          <field>[textscan.41840.595065694448].[twk:Date:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='goal weight'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[textscan.41840.595065694448].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[textscan.41840.595065694448].[none:Date:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[textscan.41840.595065694448].[none:Date:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.41840.489508009261].[none:Calculation_4320720143905551:ok]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[textscan.41840.489508009261].[none:Calculation_4320720143905551:ok]</field>
          <field>[textscan.41840.489508009261].[none:Date:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 9'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.41840.489508009261].[usr:Calculation_1920720144405091:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[textscan.41840.489508009261].[none:Date:qk]</field>
          <field>[textscan.41840.489508009261].[usr:Calculation_1920720144405091:qk]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='calorie intake' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='weight trend' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='calories vs weight' width='192'>
      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
      BC644AI89dRTeOCBB3D99ddDURQAQDweR1tbG+666y587GMfww9/+EN4PB6sWLEC77zzDgKB
      ANatWwdCCPbu3YuNGzfivffeQ3t7O1paWuD1erFx40Y89thjeP755/HAAw/MjAYYDyZS5o03
      3sg/85nP8GAwyHft2sUJITyRSPBNmzbxz33ucxwAv/nmm/mNN97Ir732Wq5pGi8vL+fFxcV8
      y5YtvKOjg3/jG9/gd955Jy8tLeXr16/niqLwa665ht933338zjvv5OvXr+cPPvggj0QifNOm
      TSl0Pvvss3zJkiW8oaGBNzU18aGhIf7222/zDRs2pNB5/PjxlN979uzh119/fdZvppRywzD4
      hRdeyC+//HJeV1fHZ8+ezb/yla/wv/mbv+G7du3iDQ0N/L777uOtra18165d/OKLL+b33HMP
      /8pXvsLLy8v5zTffzC+//HJ+4sQJPjAwwAkh/OGHH+aEEM4555FIxK3P+Xvfvn2u9r3zzjt5
      Y2Mjv//++/mdd97JOef8kUce4Y2NjXzDhg189erV/C9/+Qv/wAc+wH/2s59xSmlW7eeUv3Xr
      Vr5p0yZ+1VVX8S1btqTR4SAWi/FDhw7xT33qU/wzn/kMf+WVV/jjjz/Oi4uLXYn/ne98h3/h
      C1/gsViMb9iwgZ9//vn8G9/4Bn/kkUf48uXL+S9+8QvOOefPPfcc/8Y3vsH/KhmgtbWVV1dX
      81//+tcp17/61a/yiy++mO/bt49zzvnXvvY1ftttt/HbbruN33PPPfz+++/nmqbx6upq3tjY
      yIuLi3lTUxPfsWMH37Jli9uRR44c4R0dHW653/72t/lPfvITzjnnoVCIb9y4ke/fvz+Nrquv
      vprfcccdfMOGDfyaa67hxcXF/OTJkzyRSPA//vGP/Morr+QLFizgsViMh0Ih/pe//MU1rwzD
      4M8++yzfsGED/9CHPsQfffRR/qUvfYn39PSkfXsoFMrYjnv27OH//M//zA8dOjTuNnVw4sQJ
      /uijj/LDhw9zv9/PV65cyevq6vjjjz/On3zySZeRxou7777bNV2zwWGA0eMuG7773e/ye++9
      N4X2oaEh9zchZGZNoHww0TJH0wYIkyYej4/pQA0ODiIajaKsrAyPPfYYPvvZz+asKxwO44Yb
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='calories by week day' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='weight by week day' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='goal weight' width='150'>
      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
      j+hW+c87X/8FHL36MXf3AL8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 7' width='192'>
      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
      JNr/AcOxYUN119aLAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 8' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 9' width='95'>
      iVBORw0KGgoAAAANSUhEUgAAAF8AAADACAYAAABifL9jAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACtUlEQVR4nO3csauVdRzH8a/pYmtIkpG0XRchN6GhqaGtRTA4q4MogpODg6CE4CA4VH9D
      a1uDhDQ1OJ/oer1xXRQcXBLCy3XJrdXnddD3aztw4Pnw5sDveZ7hHDo4ODiYEB/oAe+z4kPF
      h4oPFR8qPlR8qPhQ8aHiQ8WHig8VHyo+VHyo+FDxoeJDxYeKDxUfKj5UfKj4UPGh4kPFh4oP
      FR8qPlR8qPhQ8aHiQ8WHig8VHyo+VHyo+FDxoeJDxYeKDxUfKj5UfOiIHvDGer3WExZ3aJP/
      7Gi9Xs/W1pae8dYs/8t/+MN8d/u3efXfx5Pn786db08sPmMTLB5/b2d75qtr8/PFM0tfeuMs
      fOC+nMfbT+azTz9Z9rIbauH4O/PXnzPPf701q3PnZnXp3jx4tr/shA0CD9z9efrLjbn8x9n5
      8eY389H/fONdP3Dhff7h+fj4sZlHu/O3G0EtG//l73NndXvuv9ifmX9nd2dvjnxxek4tOmJz
      LHu3c/TsXLi6Pd9fWc1P/8x8+PnXc+36l3N00RGbo4csqHc7UPGh4kPFh4oPFR8qPlR8qPhQ
      8aHiQ8WHig8VHyo+VHyo+FDxoeJDxYeKDxUfKj5UfKj4UPGh4kPFh4oPFR8qPlR8qPhQ8aHi
      Q8WHig8VHyo+VHyo+FDxoeJDxYeKDxUfKj5UfKj4UPGh4kPFh4oPFR8qPlR8qPhQ8aHiQ8WH
      ig8VHyo+VHyo+FDxoeJDxYeKDxUfKj5UfKj4UPGh4kPFh4oPFR8qPlR8qPhQ8aHiQ8WHig8V
      Hyo+VHyo+FDxoeJDxYeKDxUfKj5UfKj4UPGh4kPFh4oPFR8qPlR8qPhQ8aHiQ8WHig8VHyo+
      VHyo+FDxoeJDxYeKDxUfKj5UfKj4UPGh4kPFh4oPFR8qPlR8qPhQ8aHiQ8WHig+9BngHTq/g
      K8IHAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
